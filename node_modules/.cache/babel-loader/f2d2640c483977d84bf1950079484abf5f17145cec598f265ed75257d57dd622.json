{"ast":null,"code":"// FileName: Main.tsx\nimport React,{useState}from'react';import styles from'./Main.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const useForm=initialState=>{const[formData,setFormData]=useState(initialState);const handleChange=e=>{const{name,value}=e.target;setFormData(prevState=>({...prevState,[name]:value}));};const handleOptionSelect=(type,option)=>{setFormData(prevState=>({...prevState,[type]:option.name}));};return{formData,handleChange,handleOptionSelect};};const Main=()=>{const initialState={artist:'',album:'',track:'',startTimestamp:'',endTimestamp:''};const{formData,handleChange,handleOptionSelect}=useForm(initialState);const handleSubmit=e=>{e.preventDefault();// Simple XML packaging of formData\nconst xmlData=\"\\n<response>\\n    <artist>\".concat(formData.artist,\"</artist>\\n    <album>\").concat(formData.album,\"</album>\\n    <track>\").concat(formData.track,\"</track>\\n    <startTimestamp>\").concat(formData.startTimestamp,\"</startTimestamp>\\n    <endTimestamp>\").concat(formData.endTimestamp,\"</endTimestamp>\\n</response>\\n        \");console.log(xmlData);// For demonstration, replace with actual submission logic\n};// Form rendering with inputs and option selections\nreturn/*#__PURE__*/_jsxs(\"section\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Home\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,className:styles.form})]});};export default Main;","map":{"version":3,"names":["React","useState","styles","jsx","_jsx","jsxs","_jsxs","useForm","initialState","formData","setFormData","handleChange","e","name","value","target","prevState","handleOptionSelect","type","option","Main","artist","album","track","startTimestamp","endTimestamp","handleSubmit","preventDefault","xmlData","concat","console","log","className","section","children","onSubmit","form"],"sources":["C:/Users/jules/source/repos/jaykang98/jaze/src/components/Main/Main.tsx"],"sourcesContent":["// FileName: Main.tsx\r\nimport React, { useState } from 'react';\r\nimport styles from './Main.module.css';\r\nimport Button from '../../ui/button/Button';\r\nimport Input from '../../ui/input/Input';\r\nimport OptionList from '../../ui/optionList/OptionList';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faCompactDisc, faMusic, faClock, faHourglassEnd } from '@fortawesome/free-solid-svg-icons';\r\nimport TimeSelectionRow from '../../ui/timeSelectionRow/TimeSelectionRow';\r\n\r\ninterface FormData {\r\n    artist: string;\r\n    album: string;\r\n    track: string;\r\n    startTimestamp: string;\r\n    endTimestamp: string;\r\n}\r\n\r\nconst useForm = (initialState: FormData) => {\r\n    const [formData, setFormData] = useState<FormData>(initialState);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    const handleOptionSelect = (type: keyof FormData, option: { name: string }) => {\r\n        setFormData(prevState => ({ ...prevState, [type]: option.name }));\r\n    };\r\n\r\n    return { formData, handleChange, handleOptionSelect };\r\n};\r\n\r\nconst Main: React.FC = () => {\r\n    const initialState: FormData = {\r\n        artist: '',\r\n        album: '',\r\n        track: '',\r\n        startTimestamp: '',\r\n        endTimestamp: '',\r\n    };\r\n\r\n    const { formData, handleChange, handleOptionSelect } = useForm(initialState);\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        // Simple XML packaging of formData\r\n        const xmlData = `\r\n<response>\r\n    <artist>${formData.artist}</artist>\r\n    <album>${formData.album}</album>\r\n    <track>${formData.track}</track>\r\n    <startTimestamp>${formData.startTimestamp}</startTimestamp>\r\n    <endTimestamp>${formData.endTimestamp}</endTimestamp>\r\n</response>\r\n        `;\r\n        console.log(xmlData); // For demonstration, replace with actual submission logic\r\n    };\r\n\r\n    // Form rendering with inputs and option selections\r\n    return (\r\n        <section className={styles.section}>\r\n            <h2>Home</h2>\r\n            <form onSubmit={handleSubmit} className={styles.form}>\r\n                {/* Form fields with FontAwesomeIcon, Input, and OptionList components */}\r\n                {/* Refer to the initial Main component for detailed form structure */}\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAgBvC,KAAM,CAAAC,OAAO,CAAIC,YAAsB,EAAK,CACxC,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAWO,YAAY,CAAC,CAEhE,KAAM,CAAAG,YAAY,CAAIC,CAAsC,EAAK,CAC7D,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCL,WAAW,CAACM,SAAS,GAAK,CAAE,GAAGA,SAAS,CAAE,CAACH,IAAI,EAAGC,KAAM,CAAC,CAAC,CAAC,CAC/D,CAAC,CAED,KAAM,CAAAG,kBAAkB,CAAGA,CAACC,IAAoB,CAAEC,MAAwB,GAAK,CAC3ET,WAAW,CAACM,SAAS,GAAK,CAAE,GAAGA,SAAS,CAAE,CAACE,IAAI,EAAGC,MAAM,CAACN,IAAK,CAAC,CAAC,CAAC,CACrE,CAAC,CAED,MAAO,CAAEJ,QAAQ,CAAEE,YAAY,CAAEM,kBAAmB,CAAC,CACzD,CAAC,CAED,KAAM,CAAAG,IAAc,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAZ,YAAsB,CAAG,CAC3Ba,MAAM,CAAE,EAAE,CACVC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EAAE,CACTC,cAAc,CAAE,EAAE,CAClBC,YAAY,CAAE,EAClB,CAAC,CAED,KAAM,CAAEhB,QAAQ,CAAEE,YAAY,CAAEM,kBAAmB,CAAC,CAAGV,OAAO,CAACC,YAAY,CAAC,CAE5E,KAAM,CAAAkB,YAAY,CAAId,CAAmC,EAAK,CAC1DA,CAAC,CAACe,cAAc,CAAC,CAAC,CAElB;AACA,KAAM,CAAAC,OAAO,8BAAAC,MAAA,CAEPpB,QAAQ,CAACY,MAAM,2BAAAQ,MAAA,CAChBpB,QAAQ,CAACa,KAAK,0BAAAO,MAAA,CACdpB,QAAQ,CAACc,KAAK,mCAAAM,MAAA,CACLpB,QAAQ,CAACe,cAAc,0CAAAK,MAAA,CACzBpB,QAAQ,CAACgB,YAAY,0CAEhC,CACDK,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC,CAAE;AAC1B,CAAC,CAED;AACA,mBACItB,KAAA,YAAS0B,SAAS,CAAE9B,MAAM,CAAC+B,OAAQ,CAAAC,QAAA,eAC/B9B,IAAA,OAAA8B,QAAA,CAAI,MAAI,CAAI,CAAC,cACb9B,IAAA,SAAM+B,QAAQ,CAAET,YAAa,CAACM,SAAS,CAAE9B,MAAM,CAACkC,IAAK,CAG/C,CAAC,EACF,CAAC,CAElB,CAAC,CAED,cAAe,CAAAhB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}