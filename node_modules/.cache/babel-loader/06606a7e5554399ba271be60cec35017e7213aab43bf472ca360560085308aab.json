{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jules\\\\source\\\\repos\\\\jaykang98\\\\jaze\\\\src\\\\components\\\\Settings\\\\Settings.tsx\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"../../ui/button/Button\";\nimport { faKey, faPalette, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { decrypt } from \"../../utils/Encryption\";\nimport styles from \"./Settings.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [userID, setUserID] = useState(localStorage.getItem('userID') || null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUserName = async () => {\n      if (userID) return;\n      const encryptedToken = sessionStorage.getItem('authToken');\n      const token = encryptedToken ? decrypt(encryptedToken) : null;\n      const apiKey = '053905e1fc8b0de378dc341a24ec68c7';\n      const secret = 'a0c2b1ab664e5ea5ca735d57f4cdaaf8';\n      const paramsString = `api_key${apiKey}methodauth.getSessiontoken${token}${secret}`;\n      const apiSig = CryptoJS.MD5(paramsString).toString();\n      if (token) {\n        const url = `https://ws.audioscrobbler.com/2.0/?method=auth.getSession&token=${token}&api_key=${apiKey}&api_sig=${apiSig}&format=json`;\n        try {\n          const response = await fetch(url);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          if (data.session && data.session.name) {\n            setUserID(data.session.name);\n            localStorage.setItem('userID', data.session.name);\n          }\n        } catch (error) {\n          console.error(\"Failed to fetch session:\", error);\n          setError(error);\n        }\n      }\n    };\n    fetchUserName();\n  }, [userID]); // Dependency on userID to prevent refetching if already set\n  const clearCacheAction = () => {\n    console.log('Clear cache action');\n    localStorage.removeItem('userID');\n  };\n  const changeThemeAction = () => {\n    console.log('Change theme action');\n  };\n  const authenticationAction = () => {\n    const apiKey = '053905e1fc8b0de378dc341a24ec68c7';\n    const cbURL = encodeURIComponent(window.location.href);\n    const url = `https://www.last.fm/api/auth/?api_key=${apiKey}&cb=${cbURL}`;\n    window.location.href = url;\n    console.log('Get authorization action initiated.');\n  };\n  const settingsOptions = [{\n    id: \"clearCache\",\n    label: \"Clear Cache\",\n    action: clearCacheAction,\n    icon: faTrash\n  }, {\n    id: \"themeSwap\",\n    label: \"Change Theme\",\n    action: changeThemeAction,\n    icon: faPalette\n  }, {\n    id: \"getAuth\",\n    label: \"Authentication\",\n    action: authenticationAction,\n    icon: faKey\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.settingsTable,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: settingsOptions.map(option => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: option.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: option.id,\n              className: styles.label,\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: option.action,\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Settings, \"5EMGEJU5SaPvNDHeyekzP9+F6Uk=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["FontAwesomeIcon","React","useEffect","useState","Button","faKey","faPalette","faTrash","decrypt","styles","jsxDEV","_jsxDEV","Settings","_s","userID","setUserID","localStorage","getItem","error","setError","fetchUserName","encryptedToken","sessionStorage","token","apiKey","secret","paramsString","apiSig","CryptoJS","MD5","toString","url","response","fetch","ok","Error","status","data","json","session","name","setItem","console","clearCacheAction","log","removeItem","changeThemeAction","authenticationAction","cbURL","encodeURIComponent","window","location","href","settingsOptions","id","label","action","icon","children","fileName","_jsxFileName","lineNumber","columnNumber","className","settingsTable","map","option","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jules/source/repos/jaykang98/jaze/src/components/Settings/Settings.tsx"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../ui/button/Button\";\r\nimport { faKey, faPalette, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { decrypt } from \"../../utils/Encryption\";\r\nimport styles from \"./Settings.module.css\"\r\nconst Settings = () => {\r\n    const [userID, setUserID] = useState<string | null>(localStorage.getItem('userID') || null);\r\n    const [error, setError] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUserName = async () => {\r\n            if (userID) return;\r\n\r\n            const encryptedToken = sessionStorage.getItem('authToken');\r\n            const token = encryptedToken ? decrypt(encryptedToken) : null;\r\n            const apiKey = '053905e1fc8b0de378dc341a24ec68c7';\r\n            const secret = 'a0c2b1ab664e5ea5ca735d57f4cdaaf8';\r\n\r\n            const paramsString = `api_key${apiKey}methodauth.getSessiontoken${token}${secret}`;\r\n            const apiSig = CryptoJS.MD5(paramsString).toString();\r\n\r\n            if (token) {\r\n                const url = `https://ws.audioscrobbler.com/2.0/?method=auth.getSession&token=${token}&api_key=${apiKey}&api_sig=${apiSig}&format=json`;\r\n\r\n                try {\r\n                    const response = await fetch(url);\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! status: ${response.status}`);\r\n                    }\r\n                    const data = await response.json();\r\n\r\n                    if (data.session && data.session.name) {\r\n                        setUserID(data.session.name);\r\n                        localStorage.setItem('userID', data.session.name);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Failed to fetch session:\", error);\r\n                    setError(error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchUserName();\r\n    }, [userID]); // Dependency on userID to prevent refetching if already set\r\n    const clearCacheAction = () => {\r\n        console.log('Clear cache action');\r\n        localStorage.removeItem('userID');\r\n    };\r\n\r\n    const changeThemeAction = () => {\r\n        console.log('Change theme action');\r\n    };\r\n\r\n    const authenticationAction = () => {\r\n        const apiKey = '053905e1fc8b0de378dc341a24ec68c7';\r\n        const cbURL = encodeURIComponent(window.location.href);\r\n        const url = `https://www.last.fm/api/auth/?api_key=${apiKey}&cb=${cbURL}`;\r\n        window.location.href = url;\r\n        console.log('Get authorization action initiated.');\r\n    };\r\n\r\n\r\n  const settingsOptions = [\r\n    {\r\n      id: \"clearCache\",\r\n      label: \"Clear Cache\",\r\n      action: clearCacheAction,\r\n      icon: faTrash,\r\n    },\r\n    {\r\n      id: \"themeSwap\",\r\n      label: \"Change Theme\",\r\n      action: changeThemeAction,\r\n      icon: faPalette,\r\n    },\r\n    {\r\n      id: \"getAuth\",\r\n      label: \"Authentication\",\r\n      action: authenticationAction,\r\n      icon: faKey,\r\n    },\r\n  ];\r\n\r\n    return (\r\n        <section>\r\n            <h2>Settings</h2>\r\n            <table className={styles.settingsTable}>\r\n                <tbody>\r\n                    {settingsOptions.map(option => (\r\n                        <tr key={option.id}>\r\n                            <td><FontAwesomeIcon icon={option.icon} /></td>\r\n                            <td><label htmlFor={option.id} className={styles.label}>{option.label}</label></td>\r\n                            <td><Button onClick={option.action}>{option.label}</Button></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}