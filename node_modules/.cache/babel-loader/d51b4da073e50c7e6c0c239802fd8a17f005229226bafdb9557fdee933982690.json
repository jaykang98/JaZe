{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Source\\\\Repos\\\\jaze2\\\\src\\\\components\\\\Settings\\\\Settings.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './Settings.module.css';\nimport Button from '../../ui/button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const settingsOptions = [{\n    id: 'clearCache',\n    label: 'Cache',\n    action: () => console.log('Clear cache action')\n  }, {\n    id: 'themeSwap',\n    label: 'Theme',\n    action: () => console.log('Change theme action')\n  }, {\n    id: 'getAuth',\n    label: 'Auth',\n    action: () => {\n      const apiKey = '053905e1fc8b0de378dc341a24ec68c7';\n      const cbURL = encodeURIComponent(window.location.href);\n      const url = `https://www.last.fm/api/auth/?api_key=${apiKey}&cb=${cbURL}`;\n      window.location.href = url;\n      console.log('Get authorization action initiated.');\n    }\n  }];\n\n  // Check for token in URL on component load\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const token = searchParams.get('token');\n    if (token) {\n      console.log('Token ID:', token);\n      // Optionally, handle the token here (e.g., store it, use it for authentication)\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.settingsTable,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: settingsOptions.map(option => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: option.id,\n              className: styles.label,\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: option.action,\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Settings, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useEffect","styles","Button","jsxDEV","_jsxDEV","Settings","_s","settingsOptions","id","label","action","console","log","apiKey","cbURL","encodeURIComponent","window","location","href","url","searchParams","URLSearchParams","search","token","get","children","fileName","_jsxFileName","lineNumber","columnNumber","className","settingsTable","map","option","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jacob/Source/Repos/jaze2/src/components/Settings/Settings.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styles from './Settings.module.css';\r\nimport Button from '../../ui/button/Button';\r\n\r\nconst Settings = () => {\r\n    const settingsOptions = [\r\n        {\r\n            id: 'clearCache',\r\n            label: 'Cache',\r\n            action: () => console.log('Clear cache action'),\r\n        },\r\n        {\r\n            id: 'themeSwap',\r\n            label: 'Theme',\r\n            action: () => console.log('Change theme action'),\r\n        },\r\n        {\r\n            id: 'getAuth',\r\n            label: 'Auth',\r\n            action: () => {\r\n                const apiKey = '053905e1fc8b0de378dc341a24ec68c7';\r\n                const cbURL = encodeURIComponent(window.location.href);\r\n                const url = `https://www.last.fm/api/auth/?api_key=${apiKey}&cb=${cbURL}`;\r\n                window.location.href = url;\r\n                console.log('Get authorization action initiated.');\r\n            },\r\n        }\r\n    ];\r\n\r\n    // Check for token in URL on component load\r\n    useEffect(() => {\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const token = searchParams.get('token');\r\n        if (token) {\r\n            console.log('Token ID:', token);\r\n            // Optionally, handle the token here (e.g., store it, use it for authentication)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n            <h2>Settings</h2>\r\n            <table className={styles.settingsTable}>\r\n                <tbody>\r\n                    {settingsOptions.map(option => (\r\n                        <tr key={option.id}>\r\n                            <td>\r\n                                <label htmlFor={option.id} className={styles.label}>{option.label}</label>\r\n                            </td>\r\n                            <td>\r\n                                <Button onClick={option.action}>{option.label}</Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}