{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jules\\\\source\\\\repos\\\\jaykang98\\\\jaze\\\\src\\\\utils\\\\HandleAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// FileName: HandleAuth.tsx\nimport React, { createContext, useState, useEffect, useCallback, useContext } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst secretKey = \"a0c2b1ab664e5ea5ca735d57f4cdaaf8\";\nexport const HandleAuthContext = /*#__PURE__*/createContext(undefined);\nexport const HandleAuthProvider = ({\n  children\n}) => {\n  _s();\n  const [userID, setUserID] = useState(localStorage.getItem(\"userID\"));\n  const [error, setError] = useState(null);\n  const encrypt = useCallback(text => CryptoJS.AES.encrypt(text, secretKey).toString(), []);\n  const decrypt = useCallback(ciphertext => {\n    const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  }, []);\n  const setAuth = useCallback(token => {\n    const encryptedToken = encrypt(token);\n    sessionStorage.setItem(\"authToken\", encryptedToken);\n    fetchUserName();\n  }, [encrypt]);\n  const getAuth = useCallback(() => userID, [userID]);\n  const fetchUserName = useCallback(async () => {\n    const encryptedToken = sessionStorage.getItem(\"authToken\");\n    const token = encryptedToken ? decrypt(encryptedToken) : null;\n    const apiKey = \"053905e1fc8b0de378dc341a24ec68c7\";\n    if (token) {\n      const paramsString = `api_key=${apiKey}&token=${token}`;\n      const apiSig = CryptoJS.MD5(paramsString + secretKey).toString();\n      const url = `https://ws.audioscrobbler.com/2.0/?method=auth.getSession&token=${token}&api_key=${apiKey}&api_sig=${apiSig}&format=json`;\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.session && data.session.name) {\n          setUserID(data.session.name);\n          localStorage.setItem(\"userID\", data.session.name);\n          sessionStorage.setItem(\"userID\", data.session.name);\n        }\n      } catch (error) {\n        setError(error instanceof Error ? error.message : String(error));\n      }\n    }\n  }, [decrypt, setUserID, setError]);\n  useEffect(() => {\n    if (!userID) {\n      fetchUserName();\n    }\n  }, [userID, fetchUserName]);\n  return /*#__PURE__*/_jsxDEV(HandleAuthContext.Provider, {\n    value: {\n      userID,\n      error,\n      getAuth,\n      setAuth,\n      checkAndModifyDOMBasedOnUser: () => {}\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(HandleAuthProvider, \"Ybg5TzUvEhohvoBQKzcuwr96c7Y=\");\n_c = HandleAuthProvider;\nexport const useHandleAuth = () => {\n  _s2();\n  const context = useContext(HandleAuthContext);\n  if (context === undefined) {\n    throw new Error(\"useHandleAuth must be used within a HandleAuthProvider\");\n  }\n  return context;\n};\n_s2(useHandleAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"HandleAuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","useContext","CryptoJS","jsxDEV","_jsxDEV","secretKey","HandleAuthContext","undefined","HandleAuthProvider","children","_s","userID","setUserID","localStorage","getItem","error","setError","encrypt","text","AES","toString","decrypt","ciphertext","bytes","enc","Utf8","setAuth","token","encryptedToken","sessionStorage","setItem","fetchUserName","getAuth","apiKey","paramsString","apiSig","MD5","url","response","fetch","ok","Error","status","data","json","session","name","message","String","Provider","value","checkAndModifyDOMBasedOnUser","fileName","_jsxFileName","lineNumber","columnNumber","_c","useHandleAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/jules/source/repos/jaykang98/jaze/src/utils/HandleAuth.tsx"],"sourcesContent":["// FileName: HandleAuth.tsx\nimport React, {\n  createContext,\n  useState,\n  useEffect,\n  useCallback,\n  useContext,\n} from \"react\";\nimport CryptoJS from \"crypto-js\";\n\nconst secretKey = \"a0c2b1ab664e5ea5ca735d57f4cdaaf8\";\n\nexport const HandleAuthContext = createContext<\n  | {\n      userID: string | null;\n      error: string | null;\n      getAuth: () => string | null;\n      setAuth: (token: string) => void;\n      checkAndModifyDOMBasedOnUser: () => void;\n    }\n  | undefined\n>(undefined);\n\nexport const HandleAuthProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const [userID, setUserID] = useState<string | null>(\n    localStorage.getItem(\"userID\"),\n  );\n  const [error, setError] = useState<string | null>(null);\n\n  const encrypt = useCallback(\n    (text: string): string => CryptoJS.AES.encrypt(text, secretKey).toString(),\n    [],\n  );\n\n  const decrypt = useCallback((ciphertext: string): string => {\n    const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  }, []);\n\n  const setAuth = useCallback(\n    (token: string) => {\n      const encryptedToken = encrypt(token);\n      sessionStorage.setItem(\"authToken\", encryptedToken);\n      fetchUserName();\n    },\n    [encrypt],\n  );\n\n  const getAuth = useCallback(() => userID, [userID]);\n\n  const fetchUserName = useCallback(async () => {\n    const encryptedToken = sessionStorage.getItem(\"authToken\");\n    const token = encryptedToken ? decrypt(encryptedToken) : null;\n    const apiKey = \"053905e1fc8b0de378dc341a24ec68c7\";\n\n    if (token) {\n      const paramsString = `api_key=${apiKey}&token=${token}`;\n      const apiSig = CryptoJS.MD5(paramsString + secretKey).toString();\n      const url = `https://ws.audioscrobbler.com/2.0/?method=auth.getSession&token=${token}&api_key=${apiKey}&api_sig=${apiSig}&format=json`;\n\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        if (data.session && data.session.name) {\n          setUserID(data.session.name);\n          localStorage.setItem(\"userID\", data.session.name);\n          sessionStorage.setItem(\"userID\", data.session.name);\n        }\n      } catch (error) {\n        setError(error instanceof Error ? error.message : String(error));\n      }\n    }\n  }, [decrypt, setUserID, setError]);\n\n  useEffect(() => {\n    if (!userID) {\n      fetchUserName();\n    }\n  }, [userID, fetchUserName]);\n\n  return (\n    <HandleAuthContext.Provider\n      value={{\n        userID,\n        error,\n        getAuth,\n        setAuth,\n        checkAndModifyDOMBasedOnUser: () => {},\n      }}\n    >\n      {children}\n    </HandleAuthContext.Provider>\n  );\n};\n\nexport const useHandleAuth = () => {\n  const context = useContext(HandleAuthContext);\n  if (context === undefined) {\n    throw new Error(\"useHandleAuth must be used within a HandleAuthProvider\");\n  }\n  return context;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}