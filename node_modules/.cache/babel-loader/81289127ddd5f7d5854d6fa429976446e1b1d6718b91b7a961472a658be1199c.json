{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport CryptoJS from 'crypto-js';\nconst secretKey = 'a0c2b1ab664e5ea5ca735d57f4cdaaf8';\nexport const encrypt = text => {\n  return CryptoJS.AES.encrypt(text, secretKey).toString();\n};\nexport const decrypt = ciphertext => {\n  const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\n\n// Custom hook for handling authentication\nconst HandleAuth = () => {\n  _s();\n  const [userID, setUserID] = useState(localStorage.getItem('userID'));\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUserName = async () => {\n      if (userID) return;\n      const encryptedToken = sessionStorage.getItem('authToken');\n      const token = encryptedToken ? decrypt(encryptedToken) : null;\n      const apiKey = '053905e1fc8b0de378dc341a24ec68c7';\n      if (token) {\n        const paramsString = `api_key=${apiKey}&token=${token}`;\n        const apiSig = CryptoJS.MD5(paramsString + secretKey).toString();\n        const url = `https://ws.audioscrobbler.com/2.0/?method=auth.getSession&token=${token}&api_key=${apiKey}&api_sig=${apiSig}&format=json`;\n        try {\n          const response = await fetch(url);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          if (data.session && data.session.name) {\n            setUserID(data.session.name);\n            localStorage.setItem('userID', data.session.name); // Corrected method name\n          }\n        } catch (error) {\n          console.error(\"Failed to fetch session:\", error);\n          setError(error instanceof Error ? error.message : String(error));\n        }\n      }\n    };\n    fetchUserName();\n  }, [userID]); // Dependency array to prevent re-fetching if userID is already set\n\n  return {\n    userID,\n    error\n  };\n};\n_s(HandleAuth, \"oY6DM9CGYg2FTPrOLXgB3wBFSZE=\");\n_c = HandleAuth;\nexport default HandleAuth;\nvar _c;\n$RefreshReg$(_c, \"HandleAuth\");","map":{"version":3,"names":["useState","useEffect","CryptoJS","secretKey","encrypt","text","AES","toString","decrypt","ciphertext","bytes","enc","Utf8","HandleAuth","_s","userID","setUserID","localStorage","getItem","error","setError","fetchUserName","encryptedToken","sessionStorage","token","apiKey","paramsString","apiSig","MD5","url","response","fetch","ok","Error","status","data","json","session","name","setItem","console","message","String","_c","$RefreshReg$"],"sources":["C:/Users/jules/source/repos/jaykang98/jaze/src/utils/HandleAuth.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst secretKey = 'a0c2b1ab664e5ea5ca735d57f4cdaaf8';\r\n\r\nexport const encrypt = (text: string): string => {\r\n    return CryptoJS.AES.encrypt(text, secretKey).toString();\r\n};\r\n\r\nexport const decrypt = (ciphertext: string): string => {\r\n    const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\r\n    return bytes.toString(CryptoJS.enc.Utf8);\r\n};\r\n\r\n// Custom hook for handling authentication\r\nconst HandleAuth = () => {\r\n    const [userID, setUserID] = useState<string | null>(localStorage.getItem('userID'));\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUserName = async () => {\r\n            if (userID) return;\r\n\r\n            const encryptedToken = sessionStorage.getItem('authToken');\r\n            const token = encryptedToken ? decrypt(encryptedToken) : null;\r\n            const apiKey = '053905e1fc8b0de378dc341a24ec68c7';\r\n\r\n            if (token) {\r\n                const paramsString = `api_key=${apiKey}&token=${token}`;\r\n                const apiSig = CryptoJS.MD5(paramsString + secretKey).toString();\r\n                const url = `https://ws.audioscrobbler.com/2.0/?method=auth.getSession&token=${token}&api_key=${apiKey}&api_sig=${apiSig}&format=json`;\r\n\r\n                try {\r\n                    const response = await fetch(url);\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! status: ${response.status}`);\r\n                    }\r\n                    const data = await response.json();\r\n\r\n                    if (data.session && data.session.name) {\r\n                        setUserID(data.session.name);\r\n                        localStorage.setItem('userID', data.session.name); // Corrected method name\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Failed to fetch session:\", error);\r\n                    setError(error instanceof Error ? error.message : String(error));\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchUserName();\r\n    }, [userID]); // Dependency array to prevent re-fetching if userID is already set\r\n\r\n    return { userID, error };\r\n};\r\n\r\nexport default HandleAuth;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,WAAW;AAEhC,MAAMC,SAAS,GAAG,kCAAkC;AAEpD,OAAO,MAAMC,OAAO,GAAIC,IAAY,IAAa;EAC7C,OAAOH,QAAQ,CAACI,GAAG,CAACF,OAAO,CAACC,IAAI,EAAEF,SAAS,CAAC,CAACI,QAAQ,CAAC,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMC,OAAO,GAAIC,UAAkB,IAAa;EACnD,MAAMC,KAAK,GAAGR,QAAQ,CAACI,GAAG,CAACE,OAAO,CAACC,UAAU,EAAEN,SAAS,CAAC;EACzD,OAAOO,KAAK,CAACH,QAAQ,CAACL,QAAQ,CAACS,GAAG,CAACC,IAAI,CAAC;AAC5C,CAAC;;AAED;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAgBiB,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;EACnF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACZ,MAAMoB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAIN,MAAM,EAAE;MAEZ,MAAMO,cAAc,GAAGC,cAAc,CAACL,OAAO,CAAC,WAAW,CAAC;MAC1D,MAAMM,KAAK,GAAGF,cAAc,GAAGd,OAAO,CAACc,cAAc,CAAC,GAAG,IAAI;MAC7D,MAAMG,MAAM,GAAG,kCAAkC;MAEjD,IAAID,KAAK,EAAE;QACP,MAAME,YAAY,GAAI,WAAUD,MAAO,UAASD,KAAM,EAAC;QACvD,MAAMG,MAAM,GAAGzB,QAAQ,CAAC0B,GAAG,CAACF,YAAY,GAAGvB,SAAS,CAAC,CAACI,QAAQ,CAAC,CAAC;QAChE,MAAMsB,GAAG,GAAI,mEAAkEL,KAAM,YAAWC,MAAO,YAAWE,MAAO,cAAa;QAEtI,IAAI;UACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;UACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;UAC7D;UACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAElC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAACC,IAAI,EAAE;YACnCtB,SAAS,CAACmB,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC;YAC5BrB,YAAY,CAACsB,OAAO,CAAC,QAAQ,EAAEJ,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;UACvD;QACJ,CAAC,CAAC,OAAOnB,KAAK,EAAE;UACZqB,OAAO,CAACrB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChDC,QAAQ,CAACD,KAAK,YAAYc,KAAK,GAAGd,KAAK,CAACsB,OAAO,GAAGC,MAAM,CAACvB,KAAK,CAAC,CAAC;QACpE;MACJ;IACJ,CAAC;IAEDE,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,OAAO;IAAEA,MAAM;IAAEI;EAAM,CAAC;AAC5B,CAAC;AAACL,EAAA,CAvCID,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}