{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Source\\\\Repos\\\\jaze2\\\\src\\\\components\\\\About\\\\About.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './About.module.css';\nimport { decrypt } from '../../utils/Encryption';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = ({\n  author = 'J Kang',\n  contact = 'kangjacob1@gmail.com',\n  userID: initialUserID\n}) => {\n  _s();\n  const [userID, setUserID] = useState(initialUserID || '');\n  useEffect(() => {\n    if (!initialUserID) {\n      const fetchUserName = async () => {\n        const encryptedToken = sessionStorage.getItem('authToken');\n        const token = encryptedToken ? decrypt(encryptedToken) : null;\n        const apiKey = '053905e1fc8b0de378dc341a24ec68c7';\n        const secret = 'your_api_secret_here'; // Replace with your actual secret\n\n        // Ensure parameters are utf8 encoded and ordered alphabetically\n        const paramsString = `api_key${apiKey}methodauth.getSessiontoken${token}${secret}`;\n        const apiSig = CryptoJS.MD5(paramsString).toString();\n        if (token) {\n          const url = `https://ws.audioscrobbler.com/2.0/?method=auth.getSession&token=${token}&api_key=${apiKey}&api_sig=${apiSig}&format=json`;\n          try {\n            const response = await fetch(url);\n            if (!response.ok) {\n              throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            if (data.session && data.session.name) {\n              setUserID(data.session.name);\n            }\n          } catch (error) {\n            console.error(\"Failed to fetch session:\", error);\n          }\n        }\n      };\n      fetchUserName();\n    }\n  }, [initialUserID]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.aboutSection,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This application generates visual representations of Last.FM data. Developed by J Kang and open for public use.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"License:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"GPLv3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Logged In User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: userID || 'Not logged in'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Contact:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(About, \"aG7+3IBDT//awJaMTCip4QwPIZ0=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useState","styles","decrypt","CryptoJS","jsxDEV","_jsxDEV","About","author","contact","userID","initialUserID","_s","setUserID","fetchUserName","encryptedToken","sessionStorage","getItem","token","apiKey","secret","paramsString","apiSig","MD5","toString","url","response","fetch","ok","Error","status","data","json","session","name","error","console","className","aboutSection","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jacob/Source/Repos/jaze2/src/components/About/About.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from './About.module.css';\r\nimport { decrypt } from '../../utils/Encryption';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst About = ({ author = 'J Kang', contact = 'kangjacob1@gmail.com', userID: initialUserID }) => {\r\n    const [userID, setUserID] = useState(initialUserID || '');\r\n\r\n    useEffect(() => {\r\n        if (!initialUserID) {\r\n            const fetchUserName = async () => {\r\n                const encryptedToken = sessionStorage.getItem('authToken');\r\n                const token = encryptedToken ? decrypt(encryptedToken) : null;\r\n                const apiKey = '053905e1fc8b0de378dc341a24ec68c7';\r\n                const secret = 'your_api_secret_here'; // Replace with your actual secret\r\n\r\n                // Ensure parameters are utf8 encoded and ordered alphabetically\r\n                const paramsString = `api_key${apiKey}methodauth.getSessiontoken${token}${secret}`;\r\n                const apiSig = CryptoJS.MD5(paramsString).toString();\r\n\r\n                if (token) {\r\n                    const url = `https://ws.audioscrobbler.com/2.0/?method=auth.getSession&token=${token}&api_key=${apiKey}&api_sig=${apiSig}&format=json`;\r\n\r\n                    try {\r\n                        const response = await fetch(url);\r\n                        if (!response.ok) {\r\n                            throw new Error(`HTTP error! status: ${response.status}`);\r\n                        }\r\n                        const data = await response.json();\r\n\r\n                        if (data.session && data.session.name) {\r\n                            setUserID(data.session.name);\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(\"Failed to fetch session:\", error);\r\n                    }\r\n                }\r\n            };\r\n\r\n            fetchUserName();\r\n        }\r\n    }, [initialUserID]);\r\n\r\n    return (\r\n        <section className={styles.aboutSection}>\r\n            <h2>About</h2>\r\n            <p>This application generates visual representations of Last.FM data. Developed by J Kang and open for public use.</p>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>License:</td>\r\n                        <td>GPLv3</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Logged In User:</td>\r\n                        <td>{userID || 'Not logged in'}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Author:</td>\r\n                        <td>{author}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Contact:</td>\r\n                        <td>{contact}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}