{"ast":null,"code":"var _s = $RefreshSig$();\n// FileName: useFetchOptions.ts\nimport { useState, useEffect } from 'react';\nexport const useFetchOptions = () => {\n  _s();\n  const [options, setOptions] = useState({\n    artists: [],\n    albums: [],\n    tracks: []\n  });\n  useEffect(() => {\n    const fetchAPI = async (method, params) => {\n      // Example API call function, replace with actual API call logic\n      return await fetch(`https://example.com/api/${method}`, {\n        method: 'GET',\n        headers: {\n          // Headers if required\n        }\n      }).then(res => res.json());\n    };\n    const fetchData = async () => {\n      var _artistsData$topartis, _artistsData$topartis2, _albumsData$topalbums, _albumsData$topalbums2, _tracksData$toptracks, _tracksData$toptracks2;\n      const artistsData = await fetchAPI('user.gettopartists', {\n        limit: 4\n      });\n      const albumsData = await fetchAPI('user.gettopalbums', {\n        limit: 4\n      });\n      const tracksData = await fetchAPI('user.gettoptracks', {\n        limit: 4\n      });\n      setOptions({\n        artists: (_artistsData$topartis = artistsData === null || artistsData === void 0 ? void 0 : (_artistsData$topartis2 = artistsData.topartists) === null || _artistsData$topartis2 === void 0 ? void 0 : _artistsData$topartis2.artist) !== null && _artistsData$topartis !== void 0 ? _artistsData$topartis : [],\n        albums: (_albumsData$topalbums = albumsData === null || albumsData === void 0 ? void 0 : (_albumsData$topalbums2 = albumsData.topalbums) === null || _albumsData$topalbums2 === void 0 ? void 0 : _albumsData$topalbums2.album) !== null && _albumsData$topalbums !== void 0 ? _albumsData$topalbums : [],\n        tracks: (_tracksData$toptracks = tracksData === null || tracksData === void 0 ? void 0 : (_tracksData$toptracks2 = tracksData.toptracks) === null || _tracksData$toptracks2 === void 0 ? void 0 : _tracksData$toptracks2.track) !== null && _tracksData$toptracks !== void 0 ? _tracksData$toptracks : []\n      });\n    };\n    fetchData();\n  }, []);\n  return options;\n};\n_s(useFetchOptions, \"JUBMBQQdksZtDy2yPlXki7mgArc=\");","map":{"version":3,"names":["useState","useEffect","useFetchOptions","_s","options","setOptions","artists","albums","tracks","fetchAPI","method","params","fetch","headers","then","res","json","fetchData","_artistsData$topartis","_artistsData$topartis2","_albumsData$topalbums","_albumsData$topalbums2","_tracksData$toptracks","_tracksData$toptracks2","artistsData","limit","albumsData","tracksData","topartists","artist","topalbums","album","toptracks","track"],"sources":["C:/Users/jules/source/repos/jaykang98/jaze/src/utils/useFetchOptions.ts"],"sourcesContent":["// FileName: useFetchOptions.ts\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useFetchOptions = () => {\r\n    const [options, setOptions] = useState<{\r\n        artists: any[];\r\n        albums: any[];\r\n        tracks: any[];\r\n    }>({ artists: [], albums: [], tracks: [] });\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async (method: string, params: { limit: number }) => {\r\n            // Example API call function, replace with actual API call logic\r\n            return await fetch(`https://example.com/api/${method}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    // Headers if required\r\n                }\r\n            }).then(res => res.json());\r\n        };\r\n\r\n        const fetchData = async () => {\r\n            const artistsData = await fetchAPI('user.gettopartists', { limit: 4 });\r\n            const albumsData = await fetchAPI('user.gettopalbums', { limit: 4 });\r\n            const tracksData = await fetchAPI('user.gettoptracks', { limit: 4 });\r\n\r\n            setOptions({\r\n                artists: artistsData?.topartists?.artist ?? [],\r\n                albums: albumsData?.topalbums?.album ?? [],\r\n                tracks: tracksData?.toptracks?.track ?? [],\r\n            });\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return options;\r\n};\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAInC;IAAEM,OAAO,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAE3CP,SAAS,CAAC,MAAM;IACZ,MAAMQ,QAAQ,GAAG,MAAAA,CAAOC,MAAc,EAAEC,MAAyB,KAAK;MAClE;MACA,OAAO,MAAMC,KAAK,CAAE,2BAA0BF,MAAO,EAAC,EAAE;QACpDA,MAAM,EAAE,KAAK;QACbG,OAAO,EAAE;UACL;QAAA;MAER,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA;MAC1B,MAAMC,WAAW,GAAG,MAAMf,QAAQ,CAAC,oBAAoB,EAAE;QAAEgB,KAAK,EAAE;MAAE,CAAC,CAAC;MACtE,MAAMC,UAAU,GAAG,MAAMjB,QAAQ,CAAC,mBAAmB,EAAE;QAAEgB,KAAK,EAAE;MAAE,CAAC,CAAC;MACpE,MAAME,UAAU,GAAG,MAAMlB,QAAQ,CAAC,mBAAmB,EAAE;QAAEgB,KAAK,EAAE;MAAE,CAAC,CAAC;MAEpEpB,UAAU,CAAC;QACPC,OAAO,GAAAY,qBAAA,GAAEM,WAAW,aAAXA,WAAW,wBAAAL,sBAAA,GAAXK,WAAW,CAAEI,UAAU,cAAAT,sBAAA,uBAAvBA,sBAAA,CAAyBU,MAAM,cAAAX,qBAAA,cAAAA,qBAAA,GAAI,EAAE;QAC9CX,MAAM,GAAAa,qBAAA,GAAEM,UAAU,aAAVA,UAAU,wBAAAL,sBAAA,GAAVK,UAAU,CAAEI,SAAS,cAAAT,sBAAA,uBAArBA,sBAAA,CAAuBU,KAAK,cAAAX,qBAAA,cAAAA,qBAAA,GAAI,EAAE;QAC1CZ,MAAM,GAAAc,qBAAA,GAAEK,UAAU,aAAVA,UAAU,wBAAAJ,sBAAA,GAAVI,UAAU,CAAEK,SAAS,cAAAT,sBAAA,uBAArBA,sBAAA,CAAuBU,KAAK,cAAAX,qBAAA,cAAAA,qBAAA,GAAI;MAC5C,CAAC,CAAC;IACN,CAAC;IAEDL,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOb,OAAO;AAClB,CAAC;AAACD,EAAA,CAlCWD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}