{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jules\\\\source\\\\repos\\\\jaykang98\\\\jaze\\\\src\\\\ui\\\\timeSelectionRow\\\\TimeSelectionRow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useLayoutEffect } from 'react';\nimport Button from '../../ui/button/Button';\nimport styles from './TimeSelectionRow.module.css'; // Import the CSS module for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YearButtons = ({\n  label,\n  timestamp,\n  onYearSelect,\n  onChange\n}) => {\n  _s();\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({\n    length: 4\n  }, (_, i) => currentYear - i);\n  const containerRef = useRef(null);\n  const [visibleButtons, setVisibleButtons] = useState(years.length);\n  useLayoutEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const buttonWidth = 60;\n      const numberOfButtons = Math.floor(containerWidth / buttonWidth);\n      setVisibleButtons(numberOfButtons);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.yearButtonsContainer,\n      ref: containerRef,\n      children: years.slice(0, visibleButtons).map(year => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => onYearSelect(year),\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(YearButtons, \"d92XJf0G9w3tTlP+2Go0RR//l4o=\");\n_c = YearButtons;\nexport default YearButtons;\nvar _c;\n$RefreshReg$(_c, \"YearButtons\");","map":{"version":3,"names":["React","useRef","useState","useLayoutEffect","Button","styles","jsxDEV","_jsxDEV","YearButtons","label","timestamp","onYearSelect","onChange","_s","currentYear","Date","getFullYear","years","Array","from","length","_","i","containerRef","visibleButtons","setVisibleButtons","current","containerWidth","offsetWidth","buttonWidth","numberOfButtons","Math","floor","children","className","yearButtonsContainer","ref","slice","map","year","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jules/source/repos/jaykang98/jaze/src/ui/timeSelectionRow/TimeSelectionRow.tsx"],"sourcesContent":["import React, { useRef, useState, useLayoutEffect } from 'react';\r\nimport Button from '../../ui/button/Button';\r\nimport styles from './TimeSelectionRow.module.css'; // Import the CSS module for styling\r\n\r\ninterface YearButtonsProps {\r\n    label: string;\r\n    timestamp: string; // Add this line\r\n    onYearSelect: (year: number) => void;\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void; // Add this line if it's missing\r\n}\r\n\r\nconst YearButtons: React.FC<YearButtonsProps> = ({ label, timestamp, onYearSelect, onChange }) => {\r\n    const currentYear = new Date().getFullYear();\r\n    const years = Array.from({ length: 4 }, (_, i) => currentYear - i);\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [visibleButtons, setVisibleButtons] = useState(years.length);\r\n\r\n    useLayoutEffect(() => {\r\n        if (containerRef.current) {\r\n            const containerWidth = containerRef.current.offsetWidth;\r\n            const buttonWidth = 60;\r\n            const numberOfButtons = Math.floor(containerWidth / buttonWidth);\r\n            setVisibleButtons(numberOfButtons);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.yearButtonsContainer} ref={containerRef}>\r\n                {years.slice(0, visibleButtons).map(year => (\r\n                    <Button key={year} onClick={() => onYearSelect(year)}>\r\n                        {year}\r\n                    </Button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YearButtons;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AAChE,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,MAAM,MAAM,+BAA+B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASpD,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9F,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC5C,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKR,WAAW,GAAGQ,CAAC,CAAC;EAClE,MAAMC,YAAY,GAAGtB,MAAM,CAAiB,IAAI,CAAC;EACjD,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAACe,KAAK,CAACG,MAAM,CAAC;EAElEjB,eAAe,CAAC,MAAM;IAClB,IAAIoB,YAAY,CAACG,OAAO,EAAE;MACtB,MAAMC,cAAc,GAAGJ,YAAY,CAACG,OAAO,CAACE,WAAW;MACvD,MAAMC,WAAW,GAAG,EAAE;MACtB,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACL,cAAc,GAAGE,WAAW,CAAC;MAChEJ,iBAAiB,CAACK,eAAe,CAAC;IACtC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIvB,OAAA;IAAA0B,QAAA,eACI1B,OAAA;MAAK2B,SAAS,EAAE7B,MAAM,CAAC8B,oBAAqB;MAACC,GAAG,EAAEb,YAAa;MAAAU,QAAA,EAC1DhB,KAAK,CAACoB,KAAK,CAAC,CAAC,EAAEb,cAAc,CAAC,CAACc,GAAG,CAACC,IAAI,iBACpChC,OAAA,CAACH,MAAM;QAAYoC,OAAO,EAAEA,CAAA,KAAM7B,YAAY,CAAC4B,IAAI,CAAE;QAAAN,QAAA,EAChDM;MAAI,GADIA,IAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC/B,EAAA,CA1BIL,WAAuC;AAAAqC,EAAA,GAAvCrC,WAAuC;AA4B7C,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}