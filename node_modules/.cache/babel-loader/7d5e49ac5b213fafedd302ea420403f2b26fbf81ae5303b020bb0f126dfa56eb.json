{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Source\\\\Repos\\\\jaze2\\\\src\\\\ui\\\\optionList\\\\OptionList.tsx\";\n// OptionList.tsx\nimport React from 'react';\nimport styles from './OptionList.module.css';\nimport Button from '../../ui/button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionList = ({\n  optionType\n}) => {\n  let options = {\n    artist: [\"Top Artist 1\", \"Top Artist 2\", \"Top Artist 3\"],\n    album: [\"Top Album 1\", \"Top Album 2\", \"Top Album 3\"],\n    track: [\"Top Track 1\", \"Top Track 2\", \"Top Track 3\"]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.optionList,\n    children: options[optionType].map(option => /*#__PURE__*/_jsxDEV(Button, {\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = OptionList;\nexport default OptionList;\nvar _c;\n$RefreshReg$(_c, \"OptionList\");","map":{"version":3,"names":["React","styles","Button","jsxDEV","_jsxDEV","OptionList","optionType","options","artist","album","track","className","optionList","children","map","option","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jacob/Source/Repos/jaze2/src/ui/optionList/OptionList.tsx"],"sourcesContent":["// OptionList.tsx\r\nimport React from 'react';\r\nimport styles from './OptionList.module.css';\r\nimport Button from '../../ui/button/Button';\r\n\r\ninterface OptionListProps {\r\n    optionType: string;\r\n}\r\n\r\nconst OptionList: React.FC<OptionListProps> = ({ optionType }) => {\r\n    let options = {\r\n        artist: [\"Top Artist 1\", \"Top Artist 2\", \"Top Artist 3\"],\r\n        album: [\"Top Album 1\", \"Top Album 2\", \"Top Album 3\"],\r\n        track: [\"Top Track 1\", \"Top Track 2\", \"Top Track 3\"]\r\n    };\r\n\r\n    return (\r\n        <div className={styles.optionList}>\r\n            {options[optionType].map(option => (\r\n                <Button key={option}>{option}</Button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OptionList;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM5C,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAC9D,IAAIC,OAAO,GAAG;IACVC,MAAM,EAAE,CAAC,cAAc,EAAE,cAAc,EAAE,cAAc,CAAC;IACxDC,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC;IACpDC,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa;EACvD,CAAC;EAED,oBACIN,OAAA;IAAKO,SAAS,EAAEV,MAAM,CAACW,UAAW;IAAAC,QAAA,EAC7BN,OAAO,CAACD,UAAU,CAAC,CAACQ,GAAG,CAACC,MAAM,iBAC3BX,OAAA,CAACF,MAAM;MAAAW,QAAA,EAAeE;IAAM,GAAfA,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CACxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GAdIf,UAAqC;AAgB3C,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}