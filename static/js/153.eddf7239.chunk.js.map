{"version":3,"file":"static/js/153.eddf7239.chunk.js","mappings":"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","sources":["webpack://jaze/./src/components/foundations/optionList/OptionList.module.css?8b35","components/foundations/optionList/OptionList.tsx","webpack://jaze/./src/components/foundations/input/Input.module.css?cc3b","components/foundations/input/Input.tsx","components/ui/timeSelectionRow/TimeSelectionRow.module.css","components/ui/timeSelectionRow/TimeSelectionRow.tsx","webpack://jaze/./src/components/ui/criteriaSelectionRow/CriteriaSelectionRow.module.css?247b","components/ui/criteriaSelectionRow/CriteriaSelectionRow.tsx","components/ui/generateDataForm/GenerateDataForm.tsx","application/Main/Main.tsx","webpack://jaze/./src/components/foundations/button/Button.module.css?d28d","components/foundations/button/Button.tsx","webpack://jaze/./src/components/ui/activityTitleBar/ActivityTitleBar.module.css?0104","webpack://jaze/./src/components/ui/loginCard/LoginCard.module.css?787e","components/ui/loginCard/LoginCard.tsx","components/ui/activityTitleBar/ActivityTitleBar.tsx","webpack://jaze/./src/components/structure/viewFrame/ViewFrame.module.css?eab7","webpack://jaze/./src/components/structure/viewSection/ViewSection.module.css?a8a6","components/structure/viewSection/ViewSection.tsx","components/structure/viewFrame/ViewFrame.tsx","components/views/displayGrid/DisplayGrid.tsx","hooks/dataManagement/fetchAndProcessData.ts","hooks/dataManagement/API.ts","hooks/dataManagement/fetchUserData.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"optionList\":\"OptionList_optionList__OcD1m\"};","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { OptionListProps } from \"../../../types/foundationTypes\";\nimport Button from \"../button/Button\";\nimport styles from \"./OptionList.module.css\";\n\nconst OptionList: React.FC<OptionListProps> = ({ dataType, options, id }) => {\n  const [visibleOptions, setVisibleOptions] = useState(options);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const updateVisibleOptions = () => {\n      if (containerRef.current) {\n        const containerWidth = containerRef.current.offsetWidth;\n        let totalWidth = 0;\n        let visibleCount = 0;\n\n        options.forEach((option, index) => {\n          const optionWidth = 100;\n          if (totalWidth + optionWidth <= containerWidth) {\n            totalWidth += optionWidth;\n            visibleCount++;\n          } else {\n            return;\n          }\n        });\n\n        setVisibleOptions(options.slice(0, visibleCount));\n      }\n    };\n\n    updateVisibleOptions();\n\n    const resizeObserver = new ResizeObserver(updateVisibleOptions);\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [options]);\n\n  if (!Array.isArray(options)) {\n    console.error(\n      'OptionList component expects \"options\" prop to be an array.',\n    );\n    return null;\n  }\n\n  if (options.length) {\n    return (\n      <div ref={containerRef} className={styles.optionList} id={id}>\n        {visibleOptions.map((option, index) => (\n          <Button\n            key={index}\n            onClick={(e) => {\n              const parentRow = e.currentTarget.closest(\n                \".TimeSelectionRow, .CriteriaSelectionRow\",\n              );\n\n              if (parentRow) {\n                const input = parentRow.querySelector(\"input\");\n\n                if (input) {\n                  input.value = option.value;\n                }\n              }\n            }}\n          >\n            {option.key}\n          </Button>\n        ))}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default OptionList;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__xegc6\",\"label\":\"Input_label__Ll3f+\",\"inputField\":\"Input_inputField__ZcXS5\"};","// src/components/Input/Input.tsx\nimport React from \"react\";\nimport styles from \"./Input.module.css\";\nimport { InputProps } from \"../../../types/foundationTypes\";\n\nconst Input: React.FC<InputProps> = ({\n  id,\n  type,\n  name,\n  value,\n  placeholder,\n  onChange,\n}) => {\n  return (\n    <div className={styles.inputContainer}>\n      <input\n        id={id}\n        type={type}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        className={styles.inputField}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"TimeSelectionRow\":\"TimeSelectionRow_TimeSelectionRow__++9rd\"};","import React from \"react\";\nimport OptionList from \"../../../components/foundations/optionList/OptionList\";\nimport Input from \"../../../components/foundations/input/Input\";\nimport { SelectionType } from \"../../../types/dataTypes\";\nimport { OptionListProps } from \"../../../types/foundationTypes\";\n\nimport styles from \"./TimeSelectionRow.module.css\";\n\ninterface TimeSelectionRowProps {\n  timestamp: string;\n  label: string;\n}\n\nconst TimeSelectionRow: React.FC<TimeSelectionRowProps> = ({\n  timestamp,\n  label,\n}) => {\n  const currentYear = new Date().getFullYear();\n  const yearsOptions = Array.from({ length: 4 }, (_, i) => ({\n    key: `${currentYear - i}`,\n    dataType: \"year\" as SelectionType,\n    value: `${currentYear - i}`,\n  }));\n\n  const optionProps: OptionListProps = {\n    dataType: \"year\",\n    options: yearsOptions,\n  };\n\n  return (\n    <div className={styles.TimeSelectionRow}>\n      <span>{label}</span>\n      <Input\n        id=\"datetime-local-input\"\n        type=\"datetime-local\"\n        name=\"timestamp\"\n        value={timestamp}\n        placeholder=\"Select Date and Time\"\n      />\n      <OptionList {...optionProps} />\n    </div>\n  );\n};\n\nexport default TimeSelectionRow;\n","// extracted by mini-css-extract-plugin\nexport default {\"criteriaSelectionRow\":\"CriteriaSelectionRow_criteriaSelectionRow__vVmzl\"};","// FileName: CriteriaSelectionRow.tsx\n\nimport React, { useEffect, useState } from \"react\";\nimport Input from \"../../foundations/input/Input\";\nimport OptionList from \"../../foundations/optionList/OptionList\";\nimport { SelectionType } from \"../../../types/structureTypes\";\nimport { Option } from \"types/foundationTypes\";\nimport styles from \"./CriteriaSelectionRow.module.css\";\n\ninterface CriteriaSelectionRowProps {\n  selectionType: SelectionType;\n  setSelectionType: (value: SelectionType) => void;\n  formData: { [key: string]: any };\n  setFormData: (value: { [key: string]: any }) => void;\n  albumData: any;\n  artistData: any;\n  trackData: any;\n}\n\nconst CriteriaSelectionRow: React.FC<CriteriaSelectionRowProps> = ({\n  selectionType,\n  setSelectionType,\n  formData,\n  setFormData,\n  albumData,\n  artistData,\n  trackData,\n}) => {\n  const [options, setOptions] = useState<Option[]>([]);\n\n  useEffect(() => {\n    let newOptions: Option[] = [];\n    switch (selectionType) {\n      case \"album\":\n        newOptions =\n          albumData?.topalbums.album.map((album) => ({\n            value: album.url,\n            key: `${album.artist.name} - ${album.name}`,\n            dataType: \"album\",\n          })) || [];\n        break;\n      case \"artist\":\n        newOptions =\n          artistData?.topartists.artist.map((artist) => ({\n            value: artist.url,\n            key: artist.name,\n            dataType: \"artist\",\n          })) || [];\n        break;\n      case \"track\":\n        newOptions =\n          trackData?.toptracks.track.map((track) => ({\n            value: track.url,\n            key: `${track.artist.name} - ${track.name}`,\n            dataType: \"track\",\n          })) || [];\n        break;\n    }\n    setOptions(newOptions);\n  }, [albumData, artistData, trackData, selectionType]);\n\n  const handleTypeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newType = event.target.value as SelectionType;\n    setSelectionType(newType);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n  const selectionElement = (\n    <select value={selectionType} onChange={handleTypeChange}>\n      {[\"artist\", \"album\", \"track\"].map((type) => (\n        <option key={type} value={type} title=\"Criteria\">\n          {type.charAt(0).toUpperCase() + type.slice(1)}\n        </option>\n      ))}\n    </select>\n  );\n\n  return (\n    <>\n      <div className={styles.criteriaSelectionRow}>\n        {selectionElement}\n        <Input\n          id=\"selectionInput\"\n          type=\"text\"\n          name={selectionType}\n          value={formData[selectionType] || \"\"}\n          onChange={handleInputChange}\n          placeholder={`Enter ${selectionType}`}\n        />\n        <OptionList options={options} dataType={selectionType} />\n      </div>\n    </>\n  );\n};\n\nexport default CriteriaSelectionRow;\n","// FileName: GenerateDataForm.tsx\n\nimport React, { useState } from \"react\";\nimport TimeSelectionRow from \"../timeSelectionRow/TimeSelectionRow\";\nimport { fetchUserData } from \"../../../hooks/dataManagement/fetchUserData\";\nimport {\n  GenerateDataFormProps,\n  SelectionType,\n} from \"../../../types/structureTypes\";\nimport Button from \"../../foundations/button/Button\";\nimport CriteriaSelectionRow from \"../../ui/criteriaSelectionRow/CriteriaSelectionRow\";\n\nconst GenerateDataForm: React.FC<GenerateDataFormProps> = ({\n  formData,\n  setFormData,\n  userID,\n}) => {\n  const { albumData, artistData, trackData } = fetchUserData(userID);\n  const [selectionType, setSelectionType] = useState<SelectionType>(\"artist\");\n\n  return (\n    <form onSubmit={(e) => e.preventDefault()} id=\"GenerateVisForm\">\n      <div className=\"misc\">\n        <CriteriaSelectionRow\n          selectionType={selectionType}\n          setSelectionType={setSelectionType}\n          formData={formData}\n          setFormData={setFormData}\n          albumData={albumData}\n          artistData={artistData}\n          trackData={trackData}\n        />\n        <TimeSelectionRow\n          timestamp={formData.startTimestamp}\n          label=\"Start Time\"\n        />\n        <TimeSelectionRow timestamp={formData.endTimestamp} label=\"End Time\" />\n        <Button type=\"submit\">Submit</Button>\n      </div>\n    </form>\n  );\n};\n\nexport default GenerateDataForm;\n","// src/components/Main.tsx\nimport React, { useState } from \"react\";\nimport { FormData, ActivityConstructorProps } from \"../../types/structureTypes\";\n\nimport GenerateDataForm from \"../../components/ui/generateDataForm/GenerateDataForm\";\nimport DisplayGrid from \"../../components/views/displayGrid/DisplayGrid\";\nimport styles from \"../../types/App.module.css\";\n\nconst Main: React.FC<ActivityConstructorProps> = ({ userID }) => {\n  const [formData, setFormData] = useState<FormData>({\n    selectionType: \"track\",\n  });\n\n  const handleSetFormData = (newFormData: FormData) => setFormData(newFormData);\n\n  const mainContent = (\n    <div>\n      <h3>JaZe: Does Things</h3>\n      <p className={styles.description}>\n        This application helps you manage your music data effectively. Explore\n        various functionalities provided to enhance your experience.\n      </p>\n    </div>\n  );\n\n  const formContent = (\n    <GenerateDataForm\n      formData={formData}\n      setFormData={handleSetFormData}\n      selectionType={formData.selectionType}\n      userID={userID}\n    />\n  );\n\n  const renderContent = process.env.REACT_APP_IS_DEBUG ? (\n    mainContent\n  ) : (\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n      <p>Under Construction</p>\n    </div>\n  );\n\n  return (\n    <DisplayGrid\n      title={\"Main\"}\n      userID={userID}\n      primaryContent={renderContent}\n      secondaryContent={formContent}\n      primaryWidth={100}\n      secondaryWidth={100}\n    />\n  );\n};\n\nexport default Main;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__P50I1\",\"gradientLoop\":\"Button_gradientLoop__arAFQ\"};","// Filename: Button.tsx\nimport React, { forwardRef } from \"react\";\nimport styles from \"./Button.module.css\";\nimport { ButtonProps } from \"../../../types/foundationTypes\";\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    { onClick, children, type = \"button\", className, label, disabled = false },\n    ref,\n  ) => {\n    return (\n      <button\n        ref={ref}\n        type={type}\n        className={`${styles.button} ${className || \"\"} ${disabled ? styles.disabled : \"\"}`}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        {children}\n      </button>\n    );\n  },\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"titleBar\":\"ActivityTitleBar_titleBar__C4F1B\"};","// extracted by mini-css-extract-plugin\nexport default {\"LoginCardContainer\":\"LoginCard_LoginCardContainer__UgDVy\",\"LoginCard\":\"LoginCard_LoginCard__nOMBm\",\"userHeader\":\"LoginCard_userHeader__EGsyM\",\"userImage\":\"LoginCard_userImage__02251\",\"userInfo\":\"LoginCard_userInfo__9N6Ro\",\"SubText\":\"LoginCard_SubText__xaWPu\",\"LoginCardOverlay\":\"LoginCard_LoginCardOverlay__r2UUw\",\"logoutButton\":\"LoginCard_logoutButton__db-YT\"};","import React, { useState } from \"react\";\nimport styles from \"./LoginCard.module.css\";\nimport { fetchUserData } from \"../../../hooks/dataManagement/fetchUserData\";\nimport { useAuthenticator } from \"../../../hooks/security/useAuthenticator\";\n\ninterface LoginCardProps {\n  userID?: string;\n}\n\nconst LoginCard: React.FC<LoginCardProps> = ({ userID }) => {\n  const { userData, loading } = fetchUserData(userID);\n  const { logOut } = useAuthenticator();\n  const userImage = userData?.user?.image?.[0][\"#text\"];\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleClick = () => {\n    logOut();\n  };\n\n  if (loading) {\n    return <div className={styles.userInfo}>Loading...</div>;\n  }\n\n  return (\n    <div\n      className={styles.LoginCardContainer}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div className={styles.LoginCardOverlay}></div>\n      {userID ? (\n        <>\n          <div className={styles.LoginCard}>\n            {userImage && (\n              <img src={userImage} alt=\"User\" className={styles.userImage} />\n            )}\n            <div className={styles.userInfo}>\n              <span className={styles.userHeader}>{userID}</span>\n              <br />\n              <span>{userData?.user?.realname}</span>\n              <br />\n              <span className={styles.SubText}>Logged In!</span>\n            </div>\n          </div>\n          {isHovered && (\n            <div className={styles.logoutButton} onClick={handleClick}>\n              Log Out\n            </div>\n          )}\n        </>\n      ) : (\n        <div className={styles.LoginCard}>\n          <span>Nobody Logged in!</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LoginCard;\n","// Filename: TitleBar.tsx\nimport React from \"react\";\nimport styles from \"./ActivityTitleBar.module.css\";\nimport LoginCard from \"../loginCard/LoginCard\";\n\ninterface ActivityTitleBarProps {\n  title: string;\n  userID?: string;\n}\n\nconst ActivityTitleBar: React.FC<ActivityTitleBarProps> = ({\n  title,\n  userID,\n}) => {\n  return (\n    <div className={styles.titleBar}>\n      <div>\n        <h2>{title}</h2>\n      </div>\n      <div className={styles.loginCardContainer}>\n        <LoginCard userID={userID} />\n      </div>\n    </div>\n  );\n};\n\nexport default ActivityTitleBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"viewFrame\":\"ViewFrame_viewFrame__x+2Zi\"};","// extracted by mini-css-extract-plugin\nexport default {\"viewSection\":\"ViewSection_viewSection__j9IFc\"};","import React from \"react\";\nimport styles from \"./ViewSection.module.css\";\nimport { ViewSectionProps } from \"types/structureTypes\";\n\nconst ViewSection: React.FC<ViewSectionProps> = ({ children, style }) => {\n  return (\n    <div className={styles.viewSection} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default ViewSection;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport styles from \"src/components/structure/viewFrame/ViewFrame.module.css\";\nimport ViewSection from \"../viewSection/ViewSection\";\nimport { ViewFrameProps } from \"types/structureTypes\";\n\nconst ViewFrame: React.FC<ViewFrameProps> = ({\n  children,\n  splitPercentage = 50,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [adjustedSplit, setAdjustedSplit] = useState(splitPercentage);\n  const validChildren = React.Children.toArray(children).slice(0, 2);\n\n  useEffect(() => {\n    const adjustSplitPercentage = () => {\n      if (containerRef.current) {\n        const containerWidth = containerRef.current.offsetWidth;\n        const minChildWidth = 100;\n        const maxChildWidth = 1800;\n        let newSplit = splitPercentage;\n\n        if (containerWidth * (splitPercentage / 100) < minChildWidth) {\n          newSplit = (minChildWidth / containerWidth) * 100;\n        } else if (containerWidth * (splitPercentage / 100) > maxChildWidth) {\n          newSplit = (maxChildWidth / containerWidth) * 100;\n        }\n\n        setAdjustedSplit(newSplit);\n      }\n    };\n\n    adjustSplitPercentage();\n    window.addEventListener(\"resize\", adjustSplitPercentage);\n\n    return () => {\n      window.removeEventListener(\"resize\", adjustSplitPercentage);\n    };\n  }, [splitPercentage]);\n\n  return (\n    <div ref={containerRef} className={styles.viewFrame}>\n      <ViewSection style={{ width: `${adjustedSplit}%` }}>\n        {validChildren[0]}\n      </ViewSection>\n      <ViewSection style={{ width: `${100 - adjustedSplit}%` }}>\n        {validChildren[1]}\n      </ViewSection>\n    </div>\n  );\n};\n\nexport default ViewFrame;\n","import React from \"react\";\nimport TitleBar from \"../../ui/activityTitleBar/ActivityTitleBar\";\nimport ViewFrame from \"../../structure/viewFrame/ViewFrame\";\nimport { ActivityConstructorProps } from \"types/structureTypes\";\n\ninterface DisplayGridProps extends ActivityConstructorProps {\n  primaryContent: React.ReactNode;\n  primaryContentAnc?: React.ReactNode;\n  secondaryContent?: React.ReactNode;\n  secondaryContentAnc?: React.ReactNode;\n  title?: string;\n  primaryWidth?: number;\n  secondaryWidth?: number;\n}\n\nconst DisplayGrid: React.FC<DisplayGridProps> = ({\n  userID,\n  primaryContent,\n  primaryContentAnc,\n  secondaryContent,\n  secondaryContentAnc,\n  title,\n  primaryWidth = 50,\n  secondaryWidth = 50,\n}) => {\n  return (\n    <>\n      <TitleBar userID={userID} title={title} />\n      <section>\n        <ViewFrame splitPercentage={primaryWidth}>\n          {primaryContent}\n          {primaryContentAnc}\n        </ViewFrame>\n        <ViewFrame splitPercentage={secondaryWidth}>\n          {secondaryContent}\n          {secondaryContentAnc}\n        </ViewFrame>\n      </section>\n    </>\n  );\n};\nexport default DisplayGrid;\n","// src/utils/DataHandler.tsx\nimport { fetchData } from \"./API\";\n\nexport const fetchAndProcessData = async (\n  method: string,\n  params: Record<string, string | number | boolean>,\n) => {\n  try {\n    const response = await fetchData(method, params);\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching and processing data:\", error);\n    throw error;\n  }\n};\n","export async function fetchData<T>(\n  method: string,\n  params: Record<string, string | number | boolean>,\n): Promise<T> {\n  const queryParams = new URLSearchParams({\n    ...params,\n    api_key: process.env.REACT_APP_APIKEY!,\n    format: \"json\",\n  }).toString();\n\n  const url = `${process.env.REACT_APP_BASEURL}?method=${method}&${queryParams}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Network response was not ok: ${response.statusText}`);\n    }\n    return (await response.json()) as T;\n  } catch (error) {\n    console.error(\"Failed to fetch data:\", error);\n    throw error;\n  }\n}\n\nexport interface FetchDataParams {\n  [key: string]: string | number;\n  user?: string;\n  artist?: string;\n  album?: string;\n  track?: string;\n  autocorrect?: number;\n  page?: number;\n  limit?: number;\n  period?: string;\n  extended?: number;\n  api_key?: string;\n  format?: string;\n}\n","// FileName: useFetchUserData.tsx\n\nimport { useState, useEffect } from \"react\";\nimport { fetchAndProcessData } from \"./fetchAndProcessData\";\nimport { UserData, AlbumData, ArtistData, TrackData } from \"types/dataTypes\";\n\nexport const fetchUserData = (username: string) => {\n  const [userData, setUserData] = useState<UserData | null>(null);\n  const [albumData, setAlbumData] = useState<AlbumData | null>(null);\n  const [artistData, setArtistData] = useState<ArtistData | null>(null);\n  const [trackData, setTrackData] = useState<TrackData | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!username) {\n      setLoading(false);\n      return;\n    }\n\n    const localStorageKey = `userData_${username}`;\n    const storedData = localStorage.getItem(localStorageKey);\n\n    if (storedData) {\n      const { userData, albumData, artistData, trackData } =\n        JSON.parse(storedData);\n      setUserData(userData);\n      setAlbumData(albumData);\n      setArtistData(artistData);\n      setTrackData(trackData);\n      setLoading(false);\n    } else {\n      const fetchData = async () => {\n        setLoading(true);\n        try {\n          const userInfoPromise = fetchAndProcessData(\"user.getinfo\", {\n            user: username,\n          });\n          const userTopAlbumsPromise = fetchAndProcessData(\n            \"user.getTopAlbums\",\n            { user: username, limit: 5 },\n          );\n          const userTopArtistsPromise = fetchAndProcessData(\n            \"user.getTopArtists\",\n            { user: username, limit: 5 },\n          );\n          const userTopTracksPromise = fetchAndProcessData(\n            \"user.getTopTracks\",\n            { user: username, limit: 5 },\n          );\n\n          const [userInfo, userTopAlbums, userTopArtists, userTopTracks] =\n            await Promise.all([\n              userInfoPromise,\n              userTopAlbumsPromise,\n              userTopArtistsPromise,\n              userTopTracksPromise,\n            ]);\n\n          setUserData(userInfo as UserData);\n          setAlbumData(userTopAlbums as AlbumData);\n          setArtistData(userTopArtists as ArtistData);\n          setTrackData(userTopTracks as TrackData);\n\n          localStorage.setItem(\n            localStorageKey,\n            JSON.stringify({\n              userData: userInfo,\n              albumData: userTopAlbums,\n              artistData: userTopArtists,\n              trackData: userTopTracks,\n            }),\n          );\n        } catch (error) {\n          console.error(\"Failed to fetch user data\", error);\n          setError(\"Failed to fetch user data\");\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchData();\n    }\n  }, [username]);\n\n  return { userData, albumData, artistData, trackData, error, loading };\n};\n"],"names":["_ref","dataType","options","id","visibleOptions","setVisibleOptions","useState","containerRef","useRef","useEffect","updateVisibleOptions","current","containerWidth","offsetWidth","totalWidth","visibleCount","forEach","option","index","slice","resizeObserver","ResizeObserver","observe","disconnect","Array","isArray","length","_jsx","ref","className","styles","children","map","Button","onClick","e","parentRow","currentTarget","closest","input","querySelector","value","key","console","error","type","name","placeholder","onChange","timestamp","label","currentYear","Date","getFullYear","optionProps","from","_","i","concat","_jsxs","Input","OptionList","selectionType","setSelectionType","formData","setFormData","albumData","artistData","trackData","setOptions","newOptions","topalbums","album","url","artist","topartists","toptracks","track","selectionElement","event","newType","target","title","charAt","toUpperCase","_Fragment","prev","userID","fetchUserData","onSubmit","preventDefault","CriteriaSelectionRow","TimeSelectionRow","startTimestamp","endTimestamp","mainContent","description","formContent","GenerateDataForm","newFormData","renderContent","DisplayGrid","primaryContent","secondaryContent","primaryWidth","secondaryWidth","forwardRef","disabled","button","_userData$user","_userData$user$image","_userData$user2","userData","loading","logOut","useAuthenticator","userImage","user","image","isHovered","setIsHovered","onMouseEnter","onMouseLeave","src","alt","realname","handleClick","titleBar","loginCardContainer","LoginCard","style","splitPercentage","adjustedSplit","setAdjustedSplit","validChildren","React","toArray","adjustSplitPercentage","minChildWidth","maxChildWidth","newSplit","window","addEventListener","removeEventListener","ViewSection","width","primaryContentAnc","secondaryContentAnc","TitleBar","ViewFrame","fetchAndProcessData","async","method","params","response","queryParams","URLSearchParams","api_key","process","format","toString","fetch","ok","Error","statusText","json","fetchData","username","setUserData","setAlbumData","setArtistData","setTrackData","setError","setLoading","localStorageKey","storedData","localStorage","getItem","JSON","parse","userInfoPromise","userTopAlbumsPromise","limit","userTopArtistsPromise","userTopTracksPromise","userInfo","userTopAlbums","userTopArtists","userTopTracks","Promise","all","setItem","stringify"],"sourceRoot":""}