{"version":3,"file":"static/js/920.fe87bc09.chunk.js","mappings":"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","sources":["application/Settings/Settings.tsx","webpack://jaze/./src/components/foundations/button/Button.module.css?d28d","components/foundations/button/Button.tsx","webpack://jaze/./src/components/ui/activityTitleBar/ActivityTitleBar.module.css?0104","webpack://jaze/./src/components/ui/loginCard/LoginCard.module.css?787e","components/ui/loginCard/LoginCard.tsx","components/ui/activityTitleBar/ActivityTitleBar.tsx","webpack://jaze/./src/components/structure/viewFrame/ViewFrame.module.css?eab7","webpack://jaze/./src/components/structure/viewSection/ViewSection.module.css?a8a6","components/structure/viewSection/ViewSection.tsx","components/structure/viewFrame/ViewFrame.tsx","components/views/displayGrid/DisplayGrid.tsx","webpack://jaze/./src/components/views/displayTable/DisplayTable.module.css?a90e","components/views/displayTable/DisplayTable.tsx","hooks/dataManagement/fetchAndProcessData.ts","hooks/dataManagement/API.ts","hooks/dataManagement/fetchUserData.ts"],"sourcesContent":["// Settings.tsx\nimport React, { useMemo } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEnvelope,\n  faKey,\n  faPalette,\n  faPenNib,\n  faUser,\n  faBug,\n  faTools,\n  faCoffee,\n  faRobot,\n  faMemory,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useAuthenticator } from \"../../hooks/security/useAuthenticator\";\nimport { ActivityConstructorProps } from \"../../types/structureTypes\";\nimport DisplayPage from \"../../components/views/displayGrid/DisplayGrid\";\nimport DisplayTable from \"../../components/views/displayTable/DisplayTable\";\nimport Button from \"../../components/foundations/button/Button\";\n\ntype SettingOption = {\n  id: string;\n  displayLabel: string;\n  actionLabel?: string;\n  action: () => void;\n  icon:\n    | typeof faEnvelope\n    | typeof faKey\n    | typeof faPalette\n    | typeof faPenNib\n    | typeof faUser\n    | typeof faBug\n    | typeof faTools;\n  disabled: boolean;\n};\n\nconst Settings: React.FC<ActivityConstructorProps> = ({ userID }) => {\n  const { isAuthenticated, startAuth, logOut } = useAuthenticator();\n\n  const confirmAction = (message: string, action: () => void) => {\n    if (window.confirm(message)) {\n      action();\n    }\n  };\n\n  const settingsOptions: SettingOption[] = useMemo(() => {\n    const changeThemeAction = () => {\n      document.body.style.backgroundColor = \"Black\";\n    };\n\n    const clearCacheAction = () => {\n      confirmAction(\"Are you sure you want to clear the local cache?\", () =>\n        localStorage.clear(),\n      );\n    };\n\n    const authAction = isAuthenticated()\n      ? () => confirmAction(\"Are you sure you want to log out?\", logOut)\n      : () => confirmAction(\"Are you sure you want to log in?\", startAuth);\n\n    const baseOptions: SettingOption[] = [\n      {\n        id: \"themeSwap\",\n        displayLabel: \" Change Theme\",\n        actionLabel: \"Dark Mode\",\n        action: changeThemeAction,\n        icon: faPalette,\n        disabled: false,\n      },\n      {\n        id: \"author\",\n        displayLabel: \" Author\",\n        actionLabel: \"J Kang\",\n        action: () => console.log(\"Author: J Kang\"),\n        icon: faPenNib,\n        disabled: true,\n      },\n    ];\n\n    const authOption: SettingOption = isAuthenticated()\n      ? {\n          id: \"loggedInUser\",\n          displayLabel: \" Authentication\",\n          actionLabel: \"Log Out\",\n          action: authAction,\n          icon: faUser,\n          disabled: false,\n        }\n      : {\n          id: \"authenticate\",\n          displayLabel: \"Authentication\",\n          actionLabel: \"Log In\",\n          action: authAction,\n          icon: faKey,\n          disabled: false,\n        };\n\n    return [authOption, ...baseOptions];\n  }, [isAuthenticated, startAuth, logOut]);\n\n  const settingsData = settingsOptions.map((option) => [\n    <span key={option.id}>\n      <FontAwesomeIcon\n        icon={option.icon}\n        aria-hidden=\"true\"\n        className=\"iconStyle\"\n      />\n      {option.displayLabel}\n    </span>,\n    option.disabled ? (\n      <span>{option.actionLabel}</span>\n    ) : (\n      <Button\n        key={option.id}\n        onClick={option.action}\n        disabled={option.disabled}\n      >\n        {option.actionLabel}\n      </Button>\n    ),\n  ]);\n\n  const bugReportData = [\n    [\n      <span>\n        <FontAwesomeIcon icon={faRobot} /> Current Version\n      </span>,\n      <span>Jaze {process.env.REACT_APP_VER}</span>,\n    ],\n    [\n      <span>\n        <FontAwesomeIcon icon={faBug} /> Report A Bug\n      </span>,\n      <Button\n        onClick={() =>\n          window.open(\"mailto:admin@jklmnopea.com?subject=Bug Report\")\n        }\n      >\n        Send Email\n      </Button>,\n    ],\n    [\n      <span>\n        <FontAwesomeIcon icon={faTools} /> Contribute Code\n      </span>,\n      <Button\n        onClick={() =>\n          (window.location.href = \"https://github.com/jaykang98/jaze\")\n        }\n      >\n        Launch GitHub\n      </Button>,\n    ],\n\n    [\n      <span>\n        <FontAwesomeIcon icon={faMemory} /> Forget Me (Delete Local Data)\n      </span>,\n      <Button\n        onClick={() =>\n          confirmAction(\"Are you sure you want to clear the local cache?\", () =>\n            localStorage.clear(),\n          )\n        }\n      >\n        Delete Data\n      </Button>,\n    ],\n    [\n      <span>\n        <FontAwesomeIcon icon={faCoffee} /> Support Open Source Software\n      </span>,\n      <Button\n        onClick={() =>\n          (window.location.href =\n            \"https://paypal.me/jklmnopea?country.x=US&locale.x=en_US\")\n        }\n      >\n        Donate\n      </Button>,\n    ],\n  ];\n\n  const primaryContent = (\n    <>\n      <h3>User Customization</h3>\n      <p>\n        Log out, Log in, Enable dark mode. That's pretty much it. Have ideas to\n        improve the feature? Report a bug below!\n      </p>\n    </>\n  );\n  const primaryContentAnc = (\n    <>\n      <DisplayTable data={settingsData} />\n    </>\n  );\n  const secondaryContentAnc = (\n    <>\n      <DisplayTable data={[...bugReportData]} />\n    </>\n  );\n  const secondaryContent = (\n    <>\n      <h3>Technical Links & Settings</h3>I appreciate your participation as a\n      beta tester for my application. Your feedback has been invaluable in\n      improving JaZe over time. Thanks to your contributions, I've been able to\n      identify and fix bugs, as well as enhance the overall user experience.\n    </>\n  );\n\n  return (\n    <DisplayPage\n      title=\"Settings\"\n      userID={userID}\n      primaryContent={primaryContent}\n      primaryContentAnc={primaryContentAnc}\n      secondaryContent={secondaryContent}\n      secondaryContentAnc={secondaryContentAnc}\n    />\n  );\n};\n\nexport default Settings;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__P50I1\",\"gradientLoop\":\"Button_gradientLoop__arAFQ\"};","// Filename: Button.tsx\nimport React, { forwardRef } from \"react\";\nimport styles from \"./Button.module.css\";\nimport { ButtonProps } from \"../../../types/foundationTypes\";\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    { onClick, children, type = \"button\", className, label, disabled = false },\n    ref,\n  ) => {\n    return (\n      <button\n        ref={ref}\n        type={type}\n        className={`${styles.button} ${className || \"\"} ${disabled ? styles.disabled : \"\"}`}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        {children}\n      </button>\n    );\n  },\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"titleBar\":\"ActivityTitleBar_titleBar__C4F1B\"};","// extracted by mini-css-extract-plugin\nexport default {\"LoginCardContainer\":\"LoginCard_LoginCardContainer__UgDVy\",\"LoginCard\":\"LoginCard_LoginCard__nOMBm\",\"userHeader\":\"LoginCard_userHeader__EGsyM\",\"userImage\":\"LoginCard_userImage__02251\",\"userInfo\":\"LoginCard_userInfo__9N6Ro\",\"SubText\":\"LoginCard_SubText__xaWPu\",\"LoginCardOverlay\":\"LoginCard_LoginCardOverlay__r2UUw\",\"logoutButton\":\"LoginCard_logoutButton__db-YT\"};","import React, { useState } from \"react\";\nimport styles from \"./LoginCard.module.css\";\nimport { fetchUserData } from \"../../../hooks/dataManagement/fetchUserData\";\nimport { useAuthenticator } from \"../../../hooks/security/useAuthenticator\";\n\ninterface LoginCardProps {\n  userID?: string;\n}\n\nconst LoginCard: React.FC<LoginCardProps> = ({ userID }) => {\n  const { userData, loading } = fetchUserData(userID);\n  const { logOut } = useAuthenticator();\n  const userImage = userData?.user?.image?.[0][\"#text\"];\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleClick = () => {\n    logOut();\n  };\n\n  if (loading) {\n    return <div className={styles.userInfo}>Loading...</div>;\n  }\n\n  return (\n    <div\n      className={styles.LoginCardContainer}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div className={styles.LoginCardOverlay}></div>\n      {userID ? (\n        <>\n          <div className={styles.LoginCard}>\n            {userImage && (\n              <img src={userImage} alt=\"User\" className={styles.userImage} />\n            )}\n            <div className={styles.userInfo}>\n              <span className={styles.userHeader}>{userID}</span>\n              <br />\n              <span>{userData?.user?.realname}</span>\n              <br />\n              <span className={styles.SubText}>Logged In!</span>\n            </div>\n          </div>\n          {isHovered && (\n            <div className={styles.logoutButton} onClick={handleClick}>\n              Log Out\n            </div>\n          )}\n        </>\n      ) : (\n        <div className={styles.LoginCard}>\n          <span>Nobody Logged in!</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LoginCard;\n","// Filename: TitleBar.tsx\nimport React from \"react\";\nimport styles from \"./ActivityTitleBar.module.css\";\nimport LoginCard from \"../loginCard/LoginCard\";\n\ninterface ActivityTitleBarProps {\n  title: string;\n  userID?: string;\n}\n\nconst ActivityTitleBar: React.FC<ActivityTitleBarProps> = ({\n  title,\n  userID,\n}) => {\n  return (\n    <div className={styles.titleBar}>\n      <div>\n        <h2>{title}</h2>\n      </div>\n      <div className={styles.loginCardContainer}>\n        <LoginCard userID={userID} />\n      </div>\n    </div>\n  );\n};\n\nexport default ActivityTitleBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"viewFrame\":\"ViewFrame_viewFrame__x+2Zi\"};","// extracted by mini-css-extract-plugin\nexport default {\"viewSection\":\"ViewSection_viewSection__j9IFc\"};","import React from \"react\";\nimport styles from \"./ViewSection.module.css\";\nimport { ViewSectionProps } from \"types/structureTypes\";\n\nconst ViewSection: React.FC<ViewSectionProps> = ({ children, style }) => {\n  return (\n    <div className={styles.viewSection} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default ViewSection;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport styles from \"src/components/structure/viewFrame/ViewFrame.module.css\";\nimport ViewSection from \"../viewSection/ViewSection\";\nimport { ViewFrameProps } from \"types/structureTypes\";\n\nconst ViewFrame: React.FC<ViewFrameProps> = ({\n  children,\n  splitPercentage = 50,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [adjustedSplit, setAdjustedSplit] = useState(splitPercentage);\n  const validChildren = React.Children.toArray(children).slice(0, 2);\n\n  useEffect(() => {\n    const adjustSplitPercentage = () => {\n      if (containerRef.current) {\n        const containerWidth = containerRef.current.offsetWidth;\n        const minChildWidth = 100;\n        const maxChildWidth = 1800;\n        let newSplit = splitPercentage;\n\n        if (containerWidth * (splitPercentage / 100) < minChildWidth) {\n          newSplit = (minChildWidth / containerWidth) * 100;\n        } else if (containerWidth * (splitPercentage / 100) > maxChildWidth) {\n          newSplit = (maxChildWidth / containerWidth) * 100;\n        }\n\n        setAdjustedSplit(newSplit);\n      }\n    };\n\n    adjustSplitPercentage();\n    window.addEventListener(\"resize\", adjustSplitPercentage);\n\n    return () => {\n      window.removeEventListener(\"resize\", adjustSplitPercentage);\n    };\n  }, [splitPercentage]);\n\n  return (\n    <div ref={containerRef} className={styles.viewFrame}>\n      <ViewSection style={{ width: `${adjustedSplit}%` }}>\n        {validChildren[0]}\n      </ViewSection>\n      <ViewSection style={{ width: `${100 - adjustedSplit}%` }}>\n        {validChildren[1]}\n      </ViewSection>\n    </div>\n  );\n};\n\nexport default ViewFrame;\n","import React from \"react\";\nimport TitleBar from \"../../ui/activityTitleBar/ActivityTitleBar\";\nimport ViewFrame from \"../../structure/viewFrame/ViewFrame\";\nimport { ActivityConstructorProps } from \"types/structureTypes\";\n\ninterface DisplayGridProps extends ActivityConstructorProps {\n  primaryContent: React.ReactNode;\n  primaryContentAnc?: React.ReactNode;\n  secondaryContent?: React.ReactNode;\n  secondaryContentAnc?: React.ReactNode;\n  title?: string;\n  primaryWidth?: number;\n  secondaryWidth?: number;\n}\n\nconst DisplayGrid: React.FC<DisplayGridProps> = ({\n  userID,\n  primaryContent,\n  primaryContentAnc,\n  secondaryContent,\n  secondaryContentAnc,\n  title,\n  primaryWidth = 50,\n  secondaryWidth = 50,\n}) => {\n  return (\n    <>\n      <TitleBar userID={userID} title={title} />\n      <section>\n        <ViewFrame splitPercentage={primaryWidth}>\n          {primaryContent}\n          {primaryContentAnc}\n        </ViewFrame>\n        <ViewFrame splitPercentage={secondaryWidth}>\n          {secondaryContent}\n          {secondaryContentAnc}\n        </ViewFrame>\n      </section>\n    </>\n  );\n};\nexport default DisplayGrid;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"DisplayTable_table__qjaBx\",\"cell\":\"DisplayTable_cell__rtsiT\",\"header\":\"DisplayTable_header__mlpob\",\"boldText\":\"DisplayTable_boldText__+64nS\"};","// File: DisplayTable.tsx\nimport React from \"react\";\nimport styles from \"./DisplayTable.module.css\";\n\ntype TableCell = string | JSX.Element;\n\ninterface TableProps {\n  data: TableCell[][];\n}\n\nconst DisplayTable: React.FC<TableProps> = ({ data }) => {\n  if (data.length === 0 || (data.length > 0 && data[0].length === 0)) {\n    return <div>No data available</div>;\n  }\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {data.map((row, rowIndex) => (\n          <tr key={`row-${rowIndex}`}>\n            {row.map((cell, cellIndex) => (\n              <td\n                key={`cell-${rowIndex}-${cellIndex}`}\n                className={`${styles.cell} ${cellIndex === 0 ? styles.boldText : \"\"}`}\n              >\n                {cell}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DisplayTable;\n","// src/utils/DataHandler.tsx\nimport { fetchData } from \"./API\";\n\nexport const fetchAndProcessData = async (\n  method: string,\n  params: Record<string, string | number | boolean>,\n) => {\n  try {\n    const response = await fetchData(method, params);\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching and processing data:\", error);\n    throw error;\n  }\n};\n","export async function fetchData<T>(\n  method: string,\n  params: Record<string, string | number | boolean>,\n): Promise<T> {\n  const queryParams = new URLSearchParams({\n    ...params,\n    api_key: process.env.REACT_APP_APIKEY!,\n    format: \"json\",\n  }).toString();\n\n  const url = `${process.env.REACT_APP_BASEURL}?method=${method}&${queryParams}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Network response was not ok: ${response.statusText}`);\n    }\n    return (await response.json()) as T;\n  } catch (error) {\n    console.error(\"Failed to fetch data:\", error);\n    throw error;\n  }\n}\n\nexport interface FetchDataParams {\n  [key: string]: string | number;\n  user?: string;\n  artist?: string;\n  album?: string;\n  track?: string;\n  autocorrect?: number;\n  page?: number;\n  limit?: number;\n  period?: string;\n  extended?: number;\n  api_key?: string;\n  format?: string;\n}\n","// FileName: useFetchUserData.tsx\n\nimport { useState, useEffect } from \"react\";\nimport { fetchAndProcessData } from \"./fetchAndProcessData\";\nimport { UserData, AlbumData, ArtistData, TrackData } from \"types/dataTypes\";\n\nexport const fetchUserData = (username: string) => {\n  const [userData, setUserData] = useState<UserData | null>(null);\n  const [albumData, setAlbumData] = useState<AlbumData | null>(null);\n  const [artistData, setArtistData] = useState<ArtistData | null>(null);\n  const [trackData, setTrackData] = useState<TrackData | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!username) {\n      setLoading(false);\n      return;\n    }\n\n    const localStorageKey = `userData_${username}`;\n    const storedData = localStorage.getItem(localStorageKey);\n\n    if (storedData) {\n      const { userData, albumData, artistData, trackData } =\n        JSON.parse(storedData);\n      setUserData(userData);\n      setAlbumData(albumData);\n      setArtistData(artistData);\n      setTrackData(trackData);\n      setLoading(false);\n    } else {\n      const fetchData = async () => {\n        setLoading(true);\n        try {\n          const userInfoPromise = fetchAndProcessData(\"user.getinfo\", {\n            user: username,\n          });\n          const userTopAlbumsPromise = fetchAndProcessData(\n            \"user.getTopAlbums\",\n            { user: username, limit: 5 },\n          );\n          const userTopArtistsPromise = fetchAndProcessData(\n            \"user.getTopArtists\",\n            { user: username, limit: 5 },\n          );\n          const userTopTracksPromise = fetchAndProcessData(\n            \"user.getTopTracks\",\n            { user: username, limit: 5 },\n          );\n\n          const [userInfo, userTopAlbums, userTopArtists, userTopTracks] =\n            await Promise.all([\n              userInfoPromise,\n              userTopAlbumsPromise,\n              userTopArtistsPromise,\n              userTopTracksPromise,\n            ]);\n\n          setUserData(userInfo as UserData);\n          setAlbumData(userTopAlbums as AlbumData);\n          setArtistData(userTopArtists as ArtistData);\n          setTrackData(userTopTracks as TrackData);\n\n          localStorage.setItem(\n            localStorageKey,\n            JSON.stringify({\n              userData: userInfo,\n              albumData: userTopAlbums,\n              artistData: userTopArtists,\n              trackData: userTopTracks,\n            }),\n          );\n        } catch (error) {\n          console.error(\"Failed to fetch user data\", error);\n          setError(\"Failed to fetch user data\");\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchData();\n    }\n  }, [username]);\n\n  return { userData, albumData, artistData, trackData, error, loading };\n};\n"],"names":["_ref","userID","isAuthenticated","startAuth","logOut","useAuthenticator","confirmAction","message","action","window","confirm","settingsData","useMemo","authAction","baseOptions","id","displayLabel","actionLabel","changeThemeAction","document","body","style","backgroundColor","icon","faPalette","disabled","console","log","faPenNib","faUser","faKey","map","option","_jsxs","children","_jsx","FontAwesomeIcon","className","Button","onClick","bugReportData","faRobot","process","faBug","open","faTools","location","href","faMemory","localStorage","clear","faCoffee","primaryContent","_Fragment","primaryContentAnc","DisplayTable","data","secondaryContentAnc","secondaryContent","DisplayPage","title","forwardRef","ref","type","label","concat","styles","button","_userData$user","_userData$user$image","_userData$user2","userData","loading","fetchUserData","userImage","user","image","isHovered","setIsHovered","useState","onMouseEnter","onMouseLeave","src","alt","realname","handleClick","titleBar","loginCardContainer","LoginCard","splitPercentage","containerRef","useRef","adjustedSplit","setAdjustedSplit","validChildren","React","toArray","slice","useEffect","adjustSplitPercentage","current","containerWidth","offsetWidth","minChildWidth","maxChildWidth","newSplit","addEventListener","removeEventListener","ViewSection","width","primaryWidth","secondaryWidth","TitleBar","ViewFrame","length","row","rowIndex","cell","cellIndex","fetchAndProcessData","async","method","params","response","queryParams","URLSearchParams","api_key","format","toString","url","fetch","ok","Error","statusText","json","error","fetchData","username","setUserData","albumData","setAlbumData","artistData","setArtistData","trackData","setTrackData","setError","setLoading","localStorageKey","storedData","getItem","JSON","parse","userInfoPromise","userTopAlbumsPromise","limit","userTopArtistsPromise","userTopTracksPromise","userInfo","userTopAlbums","userTopArtists","userTopTracks","Promise","all","setItem","stringify"],"sourceRoot":""}